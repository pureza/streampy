temp_readings = stream of { room_id:int, temperature:int };;
hum_readings = stream of { room_id:int, humidity:int };;
entries = stream of { room_id:int, product_id:int };;

enum State =
  | A of int
  | B;;

define fact() : State = if temp_readings.last(:temperature) % 2 == 0 then A (5) else B ();;

when (temp_readings, fun _ -> print (match fact() with
                                       | A -> "ola"
                                       | B -> "ole"
                                     end));;

#! hum_readings
Timestamp, room_id, humidity
0,         1, 70
1,         2, 80
2,         3, 90
3,         1, 71
4,         2, 81
5,         3, 91
6,         1, 72
7,         2, 82
8,         3, 92


#! temp_readings
Timestamp, room_id, temperature
2,               1,      25
4,               3,      45  # Out-of-order keys (1, 3, 2 instead of 1, 2, 3)
5,               1,      25  # Retain the previous value
6,               2,      50
7,               3,      30
9,               1,      23

#! entries
Timestamp, room_id, product_id
3,               1,          1
4,               1,          2
6,               2,          2
7,               1,          3
8,               2,          1
9,               3,          2