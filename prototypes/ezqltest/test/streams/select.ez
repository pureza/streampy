temp_readings = stream (:temperature);;
hum_readings = stream (:humidity);;

lastTemp = temp_readings.last(:temperature);;
lastHum = hum_readings.last(:humidity);;


// hot depends on ev

temp_readingsX2 = temp_readings
                   .select(ev -> { :temperatureX2 = ev.temperature * 2 });;


// Doesn't depend on ev
just10 = temp_readings
           .select(ev -> { :a = 10 });;

combination = temp_readings
                .select(ev -> { :a = ev.temperature * 2, :b = 10, :c = lastHum });;

// select + where
complex = temp_readings
            .where (ev -> ev.temperature > 20)
            .select (ev -> { :a = ev.temperature * 2, :b = 10, :c = lastHum })
            .where (ev -> ev.c == 60);;


#! hum_readings
Timestamp, humidity
0,         40
3,         60

#! temp_readings
Timestamp, temperature
0,          30
3,          15
4,          50
