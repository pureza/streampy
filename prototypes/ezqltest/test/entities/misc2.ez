temp_readings = stream (:room_id, :temperature);;
entries = stream(:room_id, :product_id);;

lastTemp = temp_readings.last(:temperature);;

a = listenN (0, when (temp_readings, fun ev -> fun (v:int) -> ev.temperature + v + lastTemp),
                when (entries, fun ev -> fun (v:int) -> 0));;

/*
 a = 0
  | when (tempReadings, fun ev -> ev.temperature + a
  | when (entries, fun ev -> 0)
 */

when (a.updated(), fun ev -> print (a));;

#! temp_readings
Timestamp, room_id, temperature
2,               1,      25
4,               3,      45  # Out-of-order keys (1, 3, 2 instead of 1, 2, 3)
5,               1,      25  # Retain the previous value
6,               2,      50
7,               3,      30
9,               1,      23

#! entries
Timestamp, room_id, product_id
3,               1,          1
4,               1,          2
6,               2,          2
7,               1,          3
8,               2,          1
9,               3,          2