temp_readings = stream (:room_id, :temperature);;
hum_readings = stream (:room_id, :humidity);;
entries = stream(:room_id, :product_id);;

lastTemp = temp_readings.last(:temperature);;

entity Room =
  createFrom(temp_readings, :room_id);;


entity Product =
  createFrom (entries, :product_id)
  belongsTo :room
  member x.temperature = x.room.temperature.sum();;


x = when (entries, ev -> print (Product.all[ev.product_id].temperature));;

/*
entity Product =
  createFrom (entries, :product_id)
  belongsTo :room
  
  member self.temperature = self.room.temperature;;


entity Room =
  createFrom(temp_readings, :room_id)
  discrete volume

  hasMany :products
  member self.x = 10
  member self.y = self.temperature * 2;;


Room.all = temp_readings
             .groupby(:room_id, g -> let room_id = g.last(:room_id) in
                                     let temperature = g.last(:temperature) in
                                     { :room_id     = room_id ,
                                       :temperature = temperature ,
                                       :x           = 10,
                                       :y           = temperature  * 2,
                                       :volume      = g.select(ev -> { :value = ev.volume },
                                       :products    = Product.all.where(p -> p.room_id = room_id) })  


Product.all = entries
                .groupby(:product_id, g -> let room_id = g.last(:room_id) in
                                           let room = Room.all[room_id] in
                                           { :product_id  = g.last(:product_id),
                                             :room_id     = room_id,
                                             :room        = room,
                                             :temperature = room.temperature })

*/

#! hum_readings
Timestamp, room_id, humidity
0,         1, 70
1,         2, 80
2,         3, 90
3,         1, 71
4,         2, 81
5,         3, 91
6,         1, 72
7,         2, 82
8,         3, 92


#! temp_readings
Timestamp, room_id, temperature
2,               1,      25
4,               3,      45  # Out-of-order keys (1, 3, 2 instead of 1, 2, 3)
5,               1,      25  # Retain the previous value
6,               2,      50
7,               3,      30
9,               1,      23

#! entries
Timestamp, room_id, product_id
3,               1,          1
4,               1,          2
6,               2,          2
7,               1,          3
8,               2,          1
9,               3,          2