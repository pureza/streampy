temp_readings = stream (:temperature);;
hum_readings = stream (:humidity);;

// A simple window
temps_3secs = temp_readings[3 sec];;

// Test last applied to windows
lastTemp = temps_3secs.last(:temperature);;


// Test the rewrite mechanism
hotTemps_3secs = temp_readings
                   .where(ev -> ev.temperature > 25)[3 sec];;

hotTemps_3secsb = temp_readings[3 sec]
                    .where(ev -> ev.temperature > 25)
                    .where(ev -> ev.temperature > 25)
                    .where(ev -> ev.temperature > 25)
                    .where(ev -> ev.temperature > 25)
                    .where(ev -> ev.temperature > 25)
                    .where(ev -> ev.temperature > 25)
                    .where(ev -> ev.temperature > 25)
                    .where(ev -> ev.temperature > 25)
                    .where(ev -> ev.temperature > 25);;

a = temps_3secs;;
b = a;;
hotTemps_3secsc = b.where(ev -> ev.temperature > 25);;

// Windows inside groups
tempsPerRoom = temp_readings
                 .groupby(:room_id, g -> g[5 sec].last(:temperature));;


#! hum_readings
Timestamp, room_id, humidity
0,         1, 70
1,         2, 80
2,         3, 90
3,         1, 71
4,         2, 81
5,         3, 91
6,         1, 72
7,         2, 82
8,         3, 92


#! temp_readings
Timestamp, room_id, temperature
2,               1,      25
4,               3,      45  # Out-of-order keys (1, 3, 2 instead of 1, 2, 3)
5,               1,      25  # Retain the previous value
6,               2,      50
7,               3,      30
9,               1,      23

